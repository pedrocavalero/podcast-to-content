[Music] So hello everyone uh good evening wherever you are. So today we are having uh another session of the out ofthe-box developer series and uh today uh we are with uh Pedro and Igor together they will show us uh present us something uh today and I'm hoping that uh I will after the session I will know more about what an AI powered developer is. So, first of all, let's uh say hello to Pedro. How are you doing? Hey. Hello everybody. Hello. Hello, Eagle. Hello, Chilla. Yeah, I'm so excited. Uh this is something that I've been studying and I've been using for the last four months now and and I I've been trying lots of interesting stuff about being AI power developer. But but we we we I still heard lots of questions about it. So I think this this this episode here uh we can go and ask all these questions. Actually people from the from the audience please if you have any questions about that just put that in the chat so we can start go with it. Okay. Okay. Yeah. And now uh hello Igor. How are you doing? Hi Tila. Hi Pedro. Hi everyone that is watching us. Yeah, this is what this was also a question my own question when I was talking with Pedro last month about that because we're doing seeing a lot of movement around AI for a very long time and even more this year with the vibe coding and all that stuff. Probably you have seen uh some um job description where they are telling you that they expect you to generate code. So what myself is if jobs are just starting to appear like that who doesn't know how to use these tools to work for you to help you to become an AI power developer. They will be probably out of the market in no time. So it's not that your previous knowledge is not worthy. it it's very important but you need to put that to work for you with a along with AI and that's what we're going to discuss here we are going to bring to you guys uh real world examples on how do you do that I've done that myself in these last months but Pedro is doing that a little bit longer than I so it was amazing and we will put it all together here and get you started on how do you also do that because and that's as I've mentioned that's uh a both that you need to catch and I and I don't think that it's going to change in the future. It's going to change for more and more AI. uh not that AI will replace you but developers that knows AI will replace those that do those that doesn't know AI at all. So let's get started. Yes. So as as far as I remember uh we already had a session with Pedro couple of months ago about enterprise vibe coding. So this can be seen as a continuation of the conversation. What has changed uh so far or after that conversation? So let's jump into it. So who wants to start? Yeah, I think when when we talked last time, I was showing all the all the workflows we created in here in the company for for to use this AI tools uh in a production code like in a big code bases and all this difficult stuff. uh and actually it was a a kind of journey because uh I I I could create get some results about that. Of course the all the results I can I cannot show here but I can tell some details but I something that I could like get from my I coded a tool from git so I can get data from the git repo that I was using right I v coded this this this thing and then I asked AI to create a report for me of course we are talking about AI here right And then I was able to see for example I when I compare the first three months of the year like January to March and then from April to end of June right that was the things that I could create uh that I I in in this repo for me for my my productivity. Okay, I was talking about here just and I could see like since the beginning of my use of the AI like before March I was not using after April was was using and we could see uh numbers incredible numbers like five times the number of line code that I created before three times more features more PRs created uh and I could divide like the code in testing uh actual code and documentation and then I could see for example uh four uh four almost four times more code in terms of uh uh feature code, six times more code in terms of testing code and eight times more code in terms of documentation. you know, like it's just for me and it's using that things that we covered in the last episode. Okay, so this is a results for the last episode that I I didn't have at that time. Now I have, you know, it's kind of incredible. Of course, it's my case. So it's a one person data and I've seen some uh a presentation from a a study of these numbers are with like 100,000 developers from some thousands some hundreds companies right and then these numbers are much more uh much more how can I say uh uh clear when we look in a not much broader number of people. I have the numbers here. Okay. But I think we can we can talk a little more about our specific information. Then we can after that our personal uh uh personal uh uh experience and then we can talk more after that we can talk more about this kind of uh broader experience from outside the world. Mhm. Okay. All right. So Igor, you want to add something? Yeah. Yeah, absolutely. Uh upon Pedro's experience, Pedro Spirit brought us something very interesting. Here, he's already applying that on production on his company. That's interesting. Very interesting. Uh we've also seen some recent news of of AI deleting database in production. So there is all a certain governance that needs to be very well established in companies with the boundaries of what you're going to allow AI to access and what you're not going to allow to access. in this particular case here that we're bringing is to bringing AI to your particular scenario where this can help you enhance as a developer and from my experience this last month where I was able to develop a whole uh Java Spring MVC application back end just by vibe coding just by typing it and and with context with a with certainty cuz that is the that's the first difference people needs to know. If you just go and type it uh create a an application a backend application that does this and there's not enough context there's not enough definition. So the way it was so successful on my case and I believe also on Pedro's case there is that I've provided uh the AI in that case I've used Juny from Jet Brains. It's an AI agent tool built in uh IntelliJ ultimate. You also need a subscription for that. and because it's paid it's using LLM but also on the other hand you can also use local LLMs but just uh talking about the results if you give it guidelines on how uh an application should uh behave in my case I gave him the spring uh and Java microservices guidelines and also feeded these guidelines with more content with what I needed for my specific service and provided the prompt uh with h the details that I wanted. The results were very very precise. Sometimes it fade a little bit. A little bit. Yes. But I would say that it could speed up the starting process of it at several times. Several times uh I would say more than 100 times and that's why for new projects and you it can be amazing helpful to have uh agents helping you to code. uh of course as we have talked about governance it will depends to do that for a company but I will share with you guys here later in this session I will show you this developed h service some of the prompts I have sent to journey and also some templates that um I've saved in the application. So you can see how is an AI agent tool running and writing code for you. We can also run something here because uh when you create that templates, you can reuse that template. I have a template for create a property. I just change the name of the property type that I want the entity if it's an entity or controller. and and then you just tell the agent do this work for me. But that uh that's all the structure of it that you need to create before and during the agent is coding what do you do? You get a coffee and then after that you will be his sen senior because the agent AI is is smart a smart junior developer or mid mid mid developer I would say you need to review his code sometimes he is very smart more input you give him the more uh the more precise he will Uh that's what I wanted to add about this last month experiencing with Juni with Jet Brains. I've seen H also the cloud code is out. Uh it's very promising tool is another AI agent. I've not play with that yet but will eventually. But so far my experience with Juny is awesome. That's why uh I I see this this type of session, this content so important for you guys. You're a developer. You need to know how to handle with these tools. you need to to use them to your favor cuz h as I've mentioned who does has a great advantage in front of who is just typing it all by hand. Mhm. Yeah. So basically your role as a developer is changing a bit from writing, reading code towards uh specifying what needs to be done and delegating those uh task to agents or sub agents to do the work. And then you need that knowledge to to review this afterwards or what you want to accept and what you don't want to accept. And uh I think it's uh very much uh changing a little bit of your profession a little bit. So shifting a little bit what you Exactly. Exactly. I I would I would just add it sorry Pedro I would just add it on the end that coders they are death AI will replace them. There are there are no place for coders anymore. What everyone needs to understand that now you need to be a problem solver, a softening gainer that is a problem solver that understands it all. If you're just expecting the definition of the problem be prepared for you to write, you're not need anymore. AI is there for this. Go ahead, Pedro. Yeah, I would I would talk about the this thing that Chila said that is uh of course your you leverage AI to write the code. You're helping it. We're prompting it. But you at least in my company, you are responsible about your code, right? So there's I think that it was a good stuff to do because and then every time you have a PR you have engineer that you can that will be the responsible for it. So you are you are the very first the very first person that will review that code that will check if it's okay and that PR is okay to to went through a review right because it's your code it's your task right you're using AI as a tool to create to execute your task like better faster more code more documentation more tests etc uh but it's your task and then you need to check your Uh last time we talked about that someone said in the chat that is if you're vibe coding if you're not looking at your code you are not vibe coding you are blind coding. So blind I use this phrase every time. Thanks for the guy who sent this this phrase last time because this is very very true. AI we need to be responsive the code of AI right? Of course, there will be a moment that the agents will be running stuff. So the the responsible will not be exactly one engineer or other that will review. It will be the engineer who reviews, right? It depends on your workflow. Right? In my company, I am the the I I use the the tool AI tool create the PR and then someone else reviews and says, "Okay, it's really cool. it's already okay or no I think we need to change this this and that right so we have we always have at least two people two engineers looking at the code uh the one that is responsible the one that is a reviewer so it's it depends on your on your on your workflow and of course and in my company we use cos okay and we use a cursor and there's some reasons behind it And of course I think it's interesting to discuss a little about the tools and some kind of pricing because I think everybody wants to will want to know about that right? Yes. Right. So you you have got a wide range of tools and what are the criteria h how you choose those tools or how you can compare those or that's something I I would like to hear more from you from from your experience how how you choose those tools from all the available tools. I I believe that on pricing you mean Pedro maybe for the audience if they want to play with that you need to be aware of how much it will cost right so so the there are some ones that are on demand and others that are monthly paid and let's just say uh about Juny here for Juny you have the free tier, that's great. You can get started. But for Jun, there is also a entrance barrier because it's mandatory to have the intellig ultimate. If you don't have ultimate, amazing. If you don't uh you cannot use it. Uh I that's not that's not a barrier with cursor or with uh the other agent tools. Uh but so far amazing and also there are plans of $10 a month uh $20 a month. Uh I'm with the plan that would be the $10 month and for my usage that is not very intensive because I'm just using that as a a study for now. That was amazing for a month. But you use it heavily, you would need to go with the ultimate plan. I believe the prices are more likely the same with cursor, right, Pedro? Yes. Uh I I I I took some numbers here so I can we can talk about it. uh for Corso the one they use Corso has a free tier as well but most of these free tiers here uh all almost all all the tools have like a free tier why because they want to see that they want to let the users try try out their the the the tools right these tools have no much no much difference between each other they have some differences okay but most of them have like a number of main features. Okay. So let we have this what we call out completion and they tab completion people say like as well. So you're writing code and then it completes the code. If you write some comment it completes the comment. It's it started with copilot long ago. Yeah. Right. Long ago compilot already had that. And of course all this uh uh all the ids have it and now it's improved. For example, Corso has what they call tab completion because it you change a code somewhere and then you can click tab and it goes to another part of the code and complete another part of the code because it depends on that one you changed. So for example, if you are doing a change that is important like oh you add a field in a in a in a in an entity and you need to fill this this this field in someone or else in the code and you start doing part of the code. It suggests oh it would be good here it would be good there you would be good to go to the test and add there you know so this is interesting to use right it's not just allowed to completion anymore right and and many all this almost all these features have this type completion then have this uh this tail right and cursor compiler wind surfer uh I I like to talk some I I I like to about some here. Corser, wo, copilot, uh, client, open code, Gemini code assist, and Amazon cure. I this I think for me one of the main guys that are just putting this market, you know, uh, Corso is very good on that like it prices is $20 a month if you start using it. They're the play roles, right? Huh? They they are the main players on on that market right now on the on the market the startups and individual developers cursor is winning this this guy but the wind soft guy says they have more than one million subscriptions as well. So maybe I've heard a lot about this I've heard a lot about these two that they probably are the pioneers in agent coding. Uh what I do see is huge improvements with both cloud code and jet brains journey. So these guys are are playing serious really serious and they they they are getting to to win this bet. I would say not win but they will make noise. What I what I think is that there are like some startups that started this thing and and get very good on that like Cors and Windsor but man the big players are coming you know they are behind but they're coming GitHub copilot is is being really really fast because now they have all the big features the what we got the tab completion agent coding uh The chat code I I I like to say uh say we have like three three levels here like just auto completion chat coding and agent coding like agent when we have a an agent writing and checking and running tools and doing lots of stuff until until the code gets done. Shing is just you and chatting and ask oh click this and that that and then you go and create and copy. And it's like a a level one here and but all of them are getting to the third one that is agent coding. So we are talking about like co Microsoft with copilot uh Google with uh Gemini code assist Amazon with Amazon Kuro uh what else? uh the big ones as you said that June with IntellJ from with June right so we're talking about big players here and they are not coming like getting easy with the startups you know and we still have the open source guys like client and open code right is yeah I'm talking about only the idea tools That is a little different, right? They're not complete idees like cloud code like Gemini CLI like the one from from from the China Q something don't remember the name uh um which one else and there is open source one that I I don't remember code I think right so some of some all the CLI tools they don't they don't need an IDE. So you can use any ID you you want any ID you have if you sometimes you have some IDs that will not have an extension for these tools but this kind of AI tools and then you can use like code with I don't know your ID of preference you see and this all these tools like they started the last few months some of them last few months some of them last you won a couple years most most of them, right? So it's crazy and the pricing is the pricing is almost the same. So we're talking about like 20 for cursor, 15 to insurerf, 10 for copilot, 19 for Amazon Ko, 19 for Gemini. Uh and yeah, that's it. You see, so they all the this pricing is about the same for the service description. But then you have the problem about how long this credits take, right? So because all the subscriptions has limitations and then it's another problem we need to talk about. Exactly. The quot qu quot qu quot qu quot qu quot qu quot qu quot qu quot qu quot qu quot qu quot that I was mentioning here cuz I was with the uh June April has a great quot $10 per month but at the end of the month when I was just finishing the back end the quarter run out. Oh really? But run out for the month or for the day? No run for the month. for a month. I was using that for a whole month. That was amazing. Wrote lot of stuff. Lots of stuff. And then uh it run out. But okay, I I needed to wait two days. But if you do need that to use as a heavy heavy user every day, you will need to go with the Juni Ultimate. I don't remember the name that they they gave us gave them that it's $20 per month. So it you can use that a lot. But on corporations, that's a different thing. Corporation will pay a single value for all of the developers. and they will adhere to the to the company policies. That's also something I would like to ask you Pedro. Um why your company choose a cursor and if you know how it was the process of governance from them for for them to adhere to cursor what why they choose cursor and not GitHub uh copilot actions for example. Yeah. Oh started uh the the the the copilot was the thing right. So and then everybody started using copilot uh the GitHub copilot because of the all the auto completion and the sheds right and copilot was good right for that and copilot was is a very mature IDE for this part right and everybody using VS code so that's VS code with copilot it's pretty okay we don't use GitHub so all GitHub integration We don't need uh in any of the guys now Corso has this integration with GitHub but we can't use it. Uh GitHub copil is GitHub so we don't you don't the GitHub part. Uh but and then what they did was like they open they opened it to the engineers to try out they they give it a budget so we could use right a small budget like it's it was not not not so more than one subscription of that. So you could try you could get one month of Git compil get one month another one you know and test and then they they got some uh uh people uh they got some engineers trying also stuff and people realized that Corso was much better than copilot right at that time at least today it still is but it's copilot is getting there I can say uh but when we get to to cursor what what we have it. We had all this agent in local agent. So it's not like background agents, right? Because and then you have you as engineer you can have this agent stuff. Of course, it's not easy for everybody and you can have what the course says rules, right? But it's the same as GitHub instructions, the same as uh some system prompt for another for another. The idea the the idea behind all these tools is LLMs, right? So all those main ideas are pretty much the same. We need to have a better prompts to LM so the lens can help us right. So and then all these coal rules help it because we can have cursor rules per repo per project and then we can create that. So everybody in the team can access them can you can leverage all the rules you create for you. you can leverage to your team, you know, and then everybody can open that repo and have all the rules already inserted and then you can just go and uh have a course or AI much more smart for your team or for your repo, you know, so then the team can grow together and then you can have global roles for everybody like with security and stuff. So this is very an idea of covenance you know and of course everybody as everybody had a budget you can just go and get a subscription for you. This is what's good but there was a problem like recently everybody who use cruel field felt that they changed the billing and they changing the way we use it right because everybody was using premium models. they call premium models like cloud 4, Gemini 2.5 or like 031 etc. open A1 and they say okay but now you can't use these guys forever you can you have like your 20 bucks of credits to use these guys if you don't you when it is over you need to use what what we call auto model automatic model they don't say what auto model is right people say that is based on GPT41, right? People say what we could see like myself that my my credits for clothes finish in the first five days, right? And then the rest of the month I had to use this auto model in cursor. But this auto mode is very good as well. Of course, after we have created all these rules, all this context engineering in our teams, the auto model could work on that like pretty pretty see like pretty smooth. So, and this is a very good stuff for cursor because you have an option to continue using it even if your credits ended. You know, I I was woring that you were going to say that auto model sucks, but thank thank God it helped, right? Yeah. But what I think is that the models behind every model is is getting much better. I was trying the the new the newest model from Ken uh the Chinese model Q3 Coler. Have you heard about it? No, no idea which model is. the there there is two three big Chinese models today. The Deep Seek R1. Yeah, the famous model is famous one that people say, "Oh, it was it is fantastic. It's amazing blah blah." People stop to use it. But actually, you can use the problem was because if it's China, people from US don't want to use China models etc. But you can use these models use what uh uh that ser somewhere else like in US for example you can use open router where you can try different kind of models right I tried using open router I tried these models all these different models I I want to show you something interesting here can I share my screen sure yeah look here Open router. This guy is open router. Okay. What is open router? Open router is uh a a place uh where you can buy some credits to use different kind of models. Okay. And when you buy when you get an API the API key for this guy, you can put this API key in your ID. You can you can some IDs help easier to put this API keys. Some others are not that easy. But for example, I tried with client. Client is the open-source uh IDE extension from VS Code. Very very good one. But you need to put your API key for that. Some people use the open open AI API key or the Gemini API key or the whatever key. If you use open router, open router can offer you a bunch of models and uh you can just put one API key and choose right. So this open router it's on demand right you pay and it use from your credits it's not a subscription like the ones we were talking not subscription like the one we're talking okay so this is good for one side it's bad bad it's not good for other side right just for testing for example right h I don't know it depends on how you you you use your finances and stuff right because for example if you get the 20 bucks from course You have you can use for some days the cloud for the most known one but then it stops and then you can you you should use this auto and live with it you know if you have a low budget it's very good because it auto can work but sometimes you want to try something different right and then it's better to have an option sometimes you can you can run with like these low budget models that that I want to I want to show here right so and then you can try of course if you want to try the high but the high value right pricing models uh it's it will burn your credit you burn your credit really fast like this for example let's see this is the most used models this month for example right cloud sonet 4 is the most used model is the most known model for coding right so people love your we are seeing all the models that they are used for coding right as a coding agent or coding assistants right yeah this is this is for now this is open router so you can use for anything for anything okay I see yeah but I I I just filter by programming here okay oh I see great yeah I filter by programming so we can get just the programming ones they have another ones you can use for other stuff We are not talking about that. Right. So the first one is called Sonaphor. Second one Gemini 2.0 flash. This is really interesting to see. I don't know why people use 2.0 FL. Maybe because it's like uh low. Maybe it's the auto modes. Yeah, maybe the lower cost for others. Right. Exactly. But but this Gemini 2.5 flash is very good. Very good. And it's low cost as well. And then we have DC and and in in open router just a minute. Okay. So we are seeing here the most used LLM for programming in this last month. I believe this ranking I believe from since 2024 until uh July and and this is the ranking of the most used of course uh next I will ask here Pedro to show us how we can put this open router to work in for example I believe you use VS codes for with open router Pedro Yes. Look at here. So the open hotter has some for example free free models. You can use for free but of course it's limited. I couldn't use this for doing anything interesting. I think the rate limit is so slow just to try some one or two requests just to check right. But it's see you see people using a lot a lot right V3 is very good. Yeah, you see Gemini 2.5 Pro, one of the best ones we together with Sonnet 4, right? And then we have others like DipsC3, the R1 3.7 set, right? And the market share is very interesting here as you can see here market share for the same look at this Google is over entropic in this market share. Wow, that's not expected for me. Well, because we're talking about the Gemini models, all this like 2.5, 2, 2.0, the Pro, the Flash, the Light, all this is getting more than Antropic because they are lower cost. I think Antropic models are so expensive. As you can see here, I can see for awesome results, but they are more expensive, right? Yeah. Look, look at here. called for set. It's $3 per million input tokens and $15 per million output tokens. Right. Compare that of for example Gemini 2.5 Pro almost the same but half the price. Almost half the price. Yeah. And if you go for something like Gemini Flash, it's like one/4 the price. Yeah. Right. But if you go for something much more interesting like the new K3 color for example. It's onetenth the price. It's even cheaper. That's the Chinese one. The Chinese one. This is a totally new one. So this is this is the code. I tried this. It work. Let me show this working here. The So here you have the Ali Express of LLM Quen. Yes. Let's save your budget and become an AI power developer. Yeah, I I use it this guy here. I use the queen three coder. This is this is a client. I don't know if you have I'm using it. Yes. Right. Oh, using client. Client is very good, right? You can install it in your VS code as an extension and then you have it here and then you add you add your API key from open router on these two. Then you can use it for coding. Right. Exactly. You click here and then you can say API provides open the API router is this one. You can you go live get and put here and then you can choose the model. Awesome. Awesome. I was using here for Q3 coder. I was doing this. I created a new feature in this test Java stuff that I was testing here and they like oh add a persistence for me using entity I put here need no I need to add the storage to store the calculated values for Fibonacci just just to check to try to put something in the database right and then it can cache correctly it's blah blah currently it's commented blah blah and what the the good stuff here it shows how much it costed in the end like 50 cents but and then it showed like how many calls it did because I added like the agent stuff and then it's the agent stuff getting doing stuff good doing not that good stuff you know as we know with client it's an agent using this model from open router and it's working as an agent into your code right exactly Great. So for example, I can I can say uh add a view called uh description in the field cache to store how confident the value is. So guys, we are seeing a hands on AI for a developer. And then say and this guy is using queen three coder, right? The cheapest one we saw on open water maybe. Yeah. I don't want to to spend a lot of money here. I hope it works. You're right. See? And there there goes the magic. Of course, this is a very simple task just to showcase just a small thing, right? But of course uh client can use the idea of um and then it's changing everything you know the code the other parts you see this is agentic behavior right that's the idea of agents you can create stuff and then it it goes and it runs the test and it checks the change was working and then it come back and say okay I finished you what you're asking you know and if for some reason something is not working a test is failing he will go through it and try to fix it and run the test again until it passes exactly that's the and for exampl right that's the what what you on I it ran the carcass dev here it I was trying to learn more quos I don't know and then it set start set running the curl code here see and then it says it's perfect I completed everything and then it took 30 cents to add this new guy for me I tried to use the co3 uh 255 5, you have different versions. See 235 for example. This guy here, this guy here is even cheaper is half of the price of the coder and it works very well as well. So you that's why I like to try this kind of thing. So you can you can really think how much you want to spend and how what what you want to see. And that's great because you bring this because uh for many people uh having to pay 10 or 20 per month it's a barrier. It's a barrier depending where you live uh in your currency at $20 it's heavy. So you do have a ship option to get started using this cline and we open rotor. You can just give it a try or and and because you will need to know how to use that. Of course, we are just playing here with a very simple uh prompts. Uh but you can have much more elaborated prompts to create much more. Of course, it will demand more cost from using the LLN, but that's how you will probably use in your daily work in your daily activities while working with aging agent thinking. How do you say that Petro? Agent coding. Agent coding. Agent agent coding. So, that's what I say. I don't know if it's correct. Agent C agent coding. So that's amazing. This feature is important right when you think about agent take away because it's we are we are looking for this kind of agent behavior that the code goes and checks and runs and run the test and test and run the code you know. So all the things that use you see you see here it done it did all this stuff in front of us right like in few seconds. So of course if you know how to manage all this behavior and how to run this and of course you are here you can you can apply you can go and write code yourself. You can go and and ask to put to put the code and then ask him to just to create the tests. you know, you can do whatever you want when you have this kind of uh uh power in in your ID. Yeah. And that's amazing cuz power is the word I I would like to to share with you guys here uh a little bit of what I've done with uh with Juny that is also as I've mentioned earlier the jet brains a agent to this whole micros service that you're seeing here it's a java with spring micros service I've not reach written a single line of it. But of course, I've revealed it completely and that's much likely the kind of service I've been working for a very long time. But you can see here tons of tests. Uh we are using here flyway to validate the migrations of the table. H I I even the last uh operation here and I've used um the way I I was mentioning uh open API documentation h a complete open API documentation h split not the simple split completely and written by AI you mention about the documentation Pedro that's amazing really helpful to get you move faster. Of course, how how AI knows how to do that. Pedro mention in in in cursor they call it rules on juni they called it guidelines. So this file here guidelines is the guidelines on how do you instruct the agent how to code better and these guidelines were provided by Jet Brains itself on their own repository. Uh and of course this is a living document h you need to put more details and from the original document here I've added some details regarding um migration database migrations with flyway and the open API specification guidelines. Where did I got that? I used here uh the AI chat from Jet Brains that it has logged out. I don't know why uh but that's that's what it happens when you when you do it live. So let's just to show here uh what's journey journey come here journey back and this whole service let me just show you guys the last prompt I've run here some days ago I was implementing a patch operation for the beer controller and here I can see this history of it uh I've just sent in a template Uh um if you write your prompts as templates, you can reuse them. this template here and instructing the AI to replace placeholders and then details how do you create a batch operation and then I just needed to change the controller name and the entity name and then I just apply the the prompt here um changing the controller that I wanted and the entity and what it should do and here we have since from changing it uh the controller and it's a patch operation it should not h have any constraints on the DTO because uh you need to accept a new values on the DTO that on the original uh post you will Not. So uh important thing here you need to know what is a batch operation. You need to know how to do that by hand otherwise you will not know how to instruct AI about that. So your knowledge is not throw away. It's very important. And I I was on the bottom here to use the guidelines that I've just showed you and instructed him to update the OP API documentation and to validate all the tests, update all the unit tests and also to test the open API documentation with LinkedIn to that use node here. And here uh we can see how uh Juny works. It creates a plan for your from your prompt uh and it goes through it all checking it when it's complete and give the message much more likely how uh how Pedro showed us with the link right now and and it has its own terminal. But what I like the most is not only seeing what it's doing on each of these steps. it that it describes. You can see what this has done through these steps and if it's something missing, he will go back on that file and you can also see through it. But the most important thing is when the developer, the senior developer comes to play, it's your time to do the pull request review from AI into your code. Here the code here is already accepted but when this creates a new new files it says here add to git and in this case this is from my history you can just see what this has changed through the aentic iteration so I can see here that on the beer mapper test I've I've asked him on the prompt to create uh he's he's on the test this is uh adding a new test for the patch. I I asked him to create a new mapper, a new mapper method to copy uh from the DTO that does not that that accepts no values to update my entity because my previous DTO does not accept no values because h it's a a post operation. It should contains all the values and and here you can review before accepting. And if you have a review workflow in your company like it happens on the bed company, you have two times review. You have you review your own codes, your own aic codes. Of course, you need to fix something by hand. And I can show you something that didn't happened uh didn't work out of the box from the agent when I while I was uh uh testing the code generated from AI uh it was on the flyway script it happened here uh when this was altering the beer order table what happened here is that I didn't toad uh the journey that I was working with a H2 inmemory database. So it's created a SQL that works with a posgrip with a MySQL but the H2 inmemory database has a particularity that it's it it does not uh it's not able to do that all in one single shot. So I needed to split these two sentence here and much more. This was the only change that I needed to do on this whole service. And we can see here 133 tests running and passing and testing mapper and the controller, the entities, the repositories. And this was all AI generated of course very well instruct. And what I do wanted to point as well before uh finishing this showcase here and I'm not selling the tool we are talking about a JT coding here and this was my last experience is that on the very beginning here I I I did I did some prompts that were very precise to him. Uh I told him create on this package to create this package. Uh the name of the entity to use Lambok to create the the properties that I wanted in the entity the version of it. Oh uh for that I can do that by hand because if I do need to write it out for the AI I can do I can do this by hand. Of course you can but after uh introductory thing after having more context to the agit coding you can start to ask it uh more elaborated things. When you add something like uh a query parameter in the view controller list operation here it's not just a single entity that you're changing I've you're changing controller repositories services implementation testing validating it and even the documentation that has been also generated. The good thing is you should know how to do this by hand. If you do if you're a junior developer, this is great thing to be aware of this is. But you need to know how to do that by yourself before this type of service here. I can remember writing this structure of MVC for over seven years or more for sure. Exactly the same on this structure is using flyway with this kind of test even more elaborate test but um we're more highlighting how powerful this is and how far this can take you but you need to know what you're doing because overall that's your code it's your responsibility when this is going into the your company's repository. If you're doing that on a a personal project or a test like this, that's amazing to learn to see how how powerful these things are. But when you're doing that on an enterprise environment, you are also responsible of this code. And also if you're doing it uh personally for you, be responsible of your code. Test it. Put it to run. Don't just rely on that the the generated h unit tests are passing. Run it. See if it's not failing. Test it. See if this is persisting. Uh own your own code. This code is also on my GitHub. If you want to check this out, this latest version is already committed there. You can reach out to my GitHub through my blog eigorfragv.com. You will find the GitHub button there or if you just go straight forwards at intercon. It's called the Juny MVC. the description will be very clear that it's a generated code and that's a vibe coding at its best I would say because you're giving enough content contexts to the AI to empower you as an AI developer to get things done faster and in a good way. That was my experience since we've talked Pedro. That was amazing. Awesome. Oh, can you share the link here? Let's share our links. I I going to share a link a link here as well for a post that I I just sent for about this differences between the IDE and stuff. So it's sure there's an interesting if you guys want to check this this repository you can find here on GitHub. Uh you can also please also follow me on the on the GitHub if you want and also on the on my blog where I do usually post all of these things. Yeah, I will share here as well the the link for opener the one that we were looking. Yeah. So you can take a look as well and but of course all these tools are easily find internet but that's very interesting cuz uh you brought that sila were also using it I don't you're using that with open router sila the client uh yes amazing yes because I I wanted to start with with something where I did not know exactly how much it would cost what I am doing just experimenting with it and it was a good way to start for me that's great I I was not aware of that too before so that was great to bring that here Pedro yeah there are other tools actually it is a client name I like it but there are like open code as well open code is a no Uh and there is uh uh and we didn't talk about any of the CLI. So yeah. Yeah. CLI I've seen that very powerful and very very interesting also it's it's kind of newer right the CLI as far as I could see. I think I mean uh looking from the terminal perspective uh having your terminal AI power there. Mhm. Yeah. Exactly. and and you can have like I I did some testing with Gemini CLI and and I could create for an an automation uh for for my my stuff here like getting getting the info from my from a a podcast like this and then creating posts in WordPress and then you see in my in my my blog. just using CLI Gemini CLI and creating ju just typing it there. That's great. So you are thinking you are um getting more productive with with those tools. So definitely I I can't write anything without this guide anymore. Of course I can. But this is and then when we when we think about oh I don't have any AI tool now I say oh my god it looks like you're changing your uh go waiting back to the to the old ages doing like the the the neon house. Yeah. Back to the cave. Back to the cave. Yes. So there's also the a danger on that as well because uh that's was I was highlighting where I was showing the tool to own your code to reviewing it to test it. It's a way of h continue to get sharper on your code. You don't need to type it all by hand. That's the great game of productivity. But uh to not uh rely 100% on that and also to not u start to forget things right because uh and not um giving it all to that stay sharp and and it's kind as I've mentioned on LinkedIn post the other day that I tagged you Pedro h you're not expecting to be wealthy. and strong. If you are always just driving without walking or running or going to the gym, you need to to go to the gym. You need to do the exercise and working with that not 100% it's a way of doing it but working I would not say h do it all for me but work together with me would be the best approach for for the AI AI developer AI power developer and for sure that when is you work together you can learn right as a uh all all the journey is important because not not because the results the not only the result is important the journey is the journey includes you learning new things you can see some like something that they did and say oh this is interesting I never I thought about that or even though you are learning a new language like oh I need to create uh things something front end that I I I'm the worst So it it's much it's a very good strategy. You you follow what the the the the agent is doing. So you can learn, you can get better and then you know much more what you really want about that goal, right? If of course if you're running alone, you you don't get uh uh you don't know how where to to start breathing, where to start sprinting and stuff. But if you run together with someone, you can learn with this guy and then you can improve together. That's the idea. That's the same idea, right? We are back to the per programming. I've done that. uh 11 years ago, but it was in person. It was with uh another guy that were more senior than me. And these days you do have your AI as your partner programming and that that's the great thing here and use that at your own interest to to help you get improving and and learning more. And for those of you um that follows the the repository that I've just shared here um the junior MVC you will be probably seeing that in the next days uh we'll be adding a complete front end nogs there. I'm not front- end developer. I've done that long time ago and I don't know noods yet. But AI will help me to update myself in the newest front end technologies that I'm not playing with them for more than a decade decade and I will be learning from that and you will see a front end just pop popping on these on these uh on this service and I'm looking forward to to do that will be very interesting and probably very quuming as well. Yes, definitely. When when you when you are when you are guiding the the the AI, this is something interesting. When you're guiding the AI, you your your cost is lower. When you're not guiding the AI, AI can do whatever he wants. And sometimes we we just It gets crazy. It gets crazy and blow our all of our costs. Yeah, I will try to guide that as much. It's a good it's a good journey. Yeah. Yeah. Uh on the guidelines that I've showed you that's for back end yet I will add a guideline there for front end to have this uh as much as guided as possible. And also before I forget guys, and for everyone that is watching us here that is going to TDC S. Paulo in September, I will have a a mentorship hub there on Wednesday at 5:00 p.m. that it's exactly about this subject here. we we will be able to be together talking about on becoming an AI power developer to survive in this market. So everything that we are discussing here we will be talking in person there on TDC when that be when that becomes available I will bring here on next session and also on my blog uh where you can subscribe to join me on that mentorship but I'm looking forward to be with you guys on the TDC on se September so it will be amazing to be in person becoming how we do enhance and evolve as developers as software along with the power of AAI that's all we have been discussing until now. Mhm. So it looks like our journeys journey is continuing. So there will be a lot of things happening um in the near future. But right now uh we are coming slowly to the end of the session. Oh, so [Music] we should continue this conversation I guess for for for the next time in a in a another uh future session. So I I am sure that there will be a lot of other new experiences that we can add to this one. So absolutely it was amazing. Very nice. Go on. Yeah. No, no, it was very nice. I think there's all this episode has lots of stuff if you can you can start right now and and if you didn't study yet, start right now because this is something that will change our lives, you change our way of work. It's already changing and and it's fun. I I saw a video from Kentback and Kentback's Kentback the guy said he's having lots of fun using it. So yeah, let's enjoy. It will be a pumping ride, but let's enjoy it. Absolutely, Pedro. I I really enjoyed and I was also amazed while I was building this uh back end with the aink the agent building and coding also learning how it behaves and creating the templates and improving on my own promp prompts and all of that stuff and also and also learning about code itself because it came out with some spring annotations that I have never seen before. So as you've mentioned you also can learn from this part partner and the urgency that I brought this subject guys here well I talked to Pedro and I told him I believe we need to continue on this subject is that if you don't know this stuff you will be out you'll be out of the market we are seeing massive layouts everywhere in the world in every companies and you do need to learn about that and you need to to show that you know about that as well because if you know that but no one knows that you know it's not worthy so it's it's uh very important and I would also like to thank you Tone Gibson for giving your comment here h this is very important topic as I've mentioned and thank you for for being with us together and and that's the the key importance of it. you need to learn. We've showed a very cheap option here from what Pedro showed us with open router with salai. H you do have the cursor. I've showed you guys the journey from jet brains. I really loved it. And you can uh if you get the full package [Applause] with all the Jet Brains tools, they give you for free the a year of the AI Pro. That's the one that I'm using. So, you will not need to pay the monthly subscription cuz it's kind of bundled. I really liked it, but first give it a try with another tools. And if you if you earn the subscription on somewhere, even better. Even better. if you get a test. Uh I I can tell you from the guy that I usually do um some courses from John Thompson. He's a Spring Framework Guru. He he's amazing guy. He's always offering for new uh subscribers uh 123 days of IntelligJ Ultimate. If you get that test, you can also use this uh tool for free during that trial period. Uh but just having attended because I do talk a lot. That was amazing session. Thank you for have you guys here. I really enjoyed that as well, Pedro. And it's an never ending learning. Let's stay sharp and continue on this awesome journey. Mhm. Thank you everybody much. Thank you guys. See you next session. See you. Bye bye. [Music] 
